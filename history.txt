20161020/Initial checkin
  gcc -S *.c でテキストとしてアセンブラを出力可能
  8cc mymain を　_mymain に変更

20161022/Added string literal.
  アセhttps://github.com/rui314/8cc/pulseンブラの説明は右記を参照 http://www.picfun.com/c30/c3006.html
  アセンブラの説明は右記を参照 http://detail.chiebukuro.yahoo.co.jp/qa/question_detail/q11116766816	
  gccのバージョンをgcc49に変更
  コンパイル時にシンボル参照がないエラーが出るため、driver.c,test.shにプリプロセッサを制御する内容をついか
  8cc.c が出力するtmp.s の内容を一部変更

20161025/Added + and -.
  test.sh内の正規表現を変更

20161029/Introduce AST.
  コンパイル時にシンボル参照がないエラーを、test.shのtestでオプションで判定し回避

20161029/Added * and /.
20161029/Remove string literal. Add varaible.
  アセンブラについて、右記を参照 http://qiita.com/edo_m18/items/83c63cd69f119d0b9831

20161030/Add function call.
  アセンブラについて、右記を参照 https://ja.wikibooks.org/wiki/X86%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%A9/GAS%E3%81%A7%E3%81%AE%E6%96%87%E6%B3%95
  アセンブラのセクションについて、右記を参照 http://www.ertl.jp/~takayuki/readings/info/no02.html
  http://milkpot.sakura.ne.jp/note/x86.html

20161103/Reintroduce string.
  test.shのL77が通らないが、L78が通るためのちに原因調査
  stirngではエラーが出るため、.ascizを代用

20161103/Remove struct Var and merge it with struct Ast.
20161103/Added char.

20161104/Add lex.c and string.c.
20161104/Add declaration.

20161105/Add type checking.
  defineの改行について、右記を参照 http://msmori.blogspot.jp/2011/06/define.html
  typeof()について、右記を参照 http://www.nurs.or.jp/~sug/soft/super/macro.htm

20161108/Add pointer.

20161109/Remove string type. Add array type.

20161112/Add array initializer. Distingish global/local vars.
  アセンブリの動作について右記を参照 http://vanya.jp.net/os/x86call/
  ベースポインタの動作について右記を参照 https://note.mu/nekotricolor/n/n2a247c808275
  gcc -Sが出力するラベルについて右記を参照 http://stackoverflow.com/questions/9799676/what-do-the-gcc-assembly-output-labels-signify

20161204/Add array initializer. Distinguish global/local vars.
  setjmp/longjmpについて、右記を参照 http://www.nurs.or.jp/~sug/soft/super/longjmp.htm
  setjmp/longjmpについて、右記を参照 http://www.c-tipsref.com/reference/setjmp/longjmp.html
  8ccの出力結果を./assblr以下に作成する処理を、test.shに追加
  lea について、右記を参照 http://d.hatena.ne.jp/suu-g/20080505/1210012224
  lldb 導入
  lldbにおける, stdin bug 回避のため, .lldbint と debug.pyに、.stdin.txtを
  一時ファイルとして利用する処理を記載

20161205/Split main.c to gen.c and parse.c.

20161210/Add "if" statement.
  アセンブリのjeを理解するために、下記URLを参照  
  https://www.grapecity.com/tools/support/powernews/column/clang/010/page02.htm
  http://dukedog.webcrow.jp/CheatEngineHelp/asm-basics-3.htm
20161210/Add list.c.
20161210/Do not put a string for array initializer into data segment.

20161211/Add function declaration.
20161211/Add omitted array dimension declaration.
20161211/Add "for" loop and comparison operators.
20161211/Add "return" statement.

20161212/Support assignment to pointer dereference.

20161213/Add "==" operator. Fix a bug in arithmetic op.
  アセンブリのcmp, sete, setl, setg を理解するため、下記を参照
  http://www5c.biglobe.ne.jp/~ecb/assembler/4_2.html
  http://x86.renejeschke.de/html/file_module_x86_id_288.html

20161217/Add sample/nqueen.c

20161218/Fix a bug in array.
  printfの変換指定子が機能していないため、テストに失敗
  のちに対応




